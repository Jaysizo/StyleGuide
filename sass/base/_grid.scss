@import "breakpoints";
@import "bourbon/bourbon";

.flex-container, .row, .form-horizontal .form-group {
  @include display(flex);
  @include flex-flow(row wrap);
  -ms-flex-wrap: wrap;  // IE10
  @include flex-basis($base-font-size);
  list-style: none;
}

.lt-ie10 {
  .flex-container, .row, .form-horizontal .form-group {
      @include clearfix;
    }
}

%mobile-first {
  width: 100%;
}

%relative {
  position: relative;
}

.flex-item {
  @extend %mobile-first;
  @include box-sizing(border-box);
}

.flex-items {
  & > .flex-item {
    @include display(flex);
  }
}

.flex-top {
  @include align-items(flex-start);
}

.flex-bottom {
  @include align-items(flex-end);
}

.flex-center {
  @include align-items(center);
}

.flex-v-top {
  @include justify-content(flex-start);
}

.flex-v-bottom {
  @include justify-content(flex-end);
}

.flex-v-center {
  @include justify-content(center);
}

.flex-item-top {
  @include align-self(flex-start);
}

.flex-item-bottom {
  @include align-self(flex-end);
}

.flex-item-center {
  @include align-self(center);
}

// Examples:
//  .flex-3 > .flex-2
//  .flex-full
//  .flex-1of2
//  .flex-md-3 > .flex-md-2
//  .flex-md-3 > .flex-2
//  .flex-md-1of2
@mixin grid-sizing($name: "") {
  @if $name != "" and $name != "xs" {
    $name: "-#{$name}";
  } @else {
    $name: "";
  }
  $percents: ();
  $ofs: ();
  $i: 1;
  @while $i < 12 {
    $i: $i + 1;
    $j: 1;
    @while $j <= $i {
      $percent-key: round(100 * $j / $i);
      @if not map-has-key($percents, $percent-key) {
        $percents: map-merge($percents, ($percent-key: true));
        %percent#{$name}#{$percent_key} {
            width: percentage($j / $i);
        }
      }
      $number_name: ".flex-#{$j}";
      @if $j == 1 {
        $number_name: "";
      }
      .flex#{$name}-#{$i} > .flex-item#{$number_name} {
        @extend %percent#{$name}#{$percent-key};
      }
      @if(not($name == "")) {  
        .flex#{$name}-#{$i} > .flex-item.flex#{$name}-#{$j} {
          @extend %percent#{$name}#{$percent-key};
        }
      }
      @if $j < $i and not map-has-key($ofs, $percent-key) {
        $ofs: map-merge($ofs, ($percent-key: true));
        .flex-container > .flex-item.flex#{$name}-#{$j}of#{$i} {
          @extend %percent#{$name}#{$percent-key};
        }
      }
      $j: $j + 1;
    }
  }
  .flex#{$name}-hide {
    display: none;
  }
  .flex#{$name}-show {
    display: block;
  }
  %width100#{$name} {
    width: 100%;
  }
  .flex-container > .flex-item.flex#{$name}-full {
    @extend %width100#{$name};
  }
  $name_: $name;
  @if $name == "" {
    $name: "-xs";
    @each $breakpoint, $min-width in $breakpoints {
      $i: 0;
      @while $i < 12 {
        $i: $i + 1;
        .col-#{$breakpoint}-#{$i} {
          @extend %mobile-first;
          @extend %relative;
        }
      }
    }
  }
  .col#{$name}-push-0 {
    left: auto;
  }
  .col#{$name}-pull-0 {
    right: auto;
  }
  $i: 0;
  @while $i < 12 {
    $i: $i + 1;
    $percent-key: round(100 * $i / 12);
    @if($i < 12) { 
      .col#{$name}-#{$i} {
        @extend %percent#{$name_}#{$percent-key};
      }
    } @else {
       .col#{$name}-#{$i} {
        @extend %width100#{$name_};
      }
    }

    .col#{$name}-offset-#{$i} {
      margin-left: percentage($i / 12);
    }
    .col#{$name}-push-#{$i} {
      left: percentage($i / 12);
    }
    .col#{$name}-pull-#{$i} {
      right: percentage($i / 12);
    }
  }
}

%col {
  float: left;
  min-height: 1px;
}
.lt-ie10 {
  .flex-item {
    @extend %col;
  }
  @each $name, $min-width in $breakpoints {
    $i: 0;
    @while $i < 12 {
      $i: $i + 1;
      .col-#{$name}-#{$i} {
        @extend %col;
      }
    }
  }
}

// Examples:
//    .flex-gutters
//    .flex-sm-gutters-wide
//    .flex-md-gutters-wider
//    .flex-lg-gutters-widest
@mixin grid-gutters($name: "") {
  @if $name != "" and $name != "xs" {
    $name: "-#{$name}";
  }
  .flex#{$name}-gutters {
    margin-left: -0.5rem;
    & > .flex-item {
      padding-left: 0.5rem;
    }
  }
  @each $part in 1, 2, 3 {
    $r: "";
    @if $part > 1 {
      $r: "r";
    } @else if $part > 2 {
      $r: "st";
    }
    .flex#{$name}-gutters-wide#{$r} {
      margin-left: -1rem * $part;
      & > .flex-item {
        padding-left: 1rem * $part;
      }
    }
  }
}

@include grid-sizing();
@include grid-gutters();

@each $breakpoint, $min-width in $breakpoints {
  @include breakpoint($breakpoint) {
    @include grid-sizing($breakpoint);
    @include grid-gutters($breakpoint); 
  }
}

